{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-length":"81270","content-security-policy":"connect-src 'self' https:;img-src 'self' data: blob: https://market-assets.strapi.io;media-src 'self' data: blob:;default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline'","content-type":"application/json; charset=utf-8","date":"Tue, 05 Nov 2024 12:59:37 GMT","keep-alive":"timeout=5","referrer-policy":"no-referrer","strict-transport-security":"max-age=31536000; includeSubDomains","vary":"Origin","x-content-type-options":"nosniff","x-dns-prefetch-control":"off","x-download-options":"noopen","x-frame-options":"SAMEORIGIN","x-permitted-cross-domain-policies":"none","x-powered-by":"Strapi <strapi.io>"},"body":"","status":200,"url":"http://localhost:1337/api/reviews?params[fields][0]=slug&params[fields][1]=title&params[fields][2]=subtitle&params[fields][3]=publishedAt&params[populate][image][fields][0]=url&params[sort][0]=publishedAt%3Adesc&params[pagination][pageSize]=6"},"revalidate":31536000,"tags":[]}